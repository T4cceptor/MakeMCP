name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            name: linux-amd64
          - goos: linux
            goarch: arm64
            name: linux-arm64
          - goos: darwin
            goarch: amd64
            name: darwin-amd64
          - goos: darwin
            goarch: arm64
            name: darwin-arm64
          - goos: windows
            goarch: amd64
            name: windows-amd64
            ext: .exe
          - goos: freebsd
            goarch: amd64
            name: freebsd-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          # Set version from tag or input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.tag }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          
          # Build binary
          BINARY_NAME="makemcp${{ matrix.ext }}"
          go build -ldflags "-s -w -X main.version=${VERSION}" -o "${BINARY_NAME}" ./cmd/makemcp.go
          
          # Create archive
          ARCHIVE_NAME="makemcp-${VERSION}-${{ matrix.name }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip "${ARCHIVE_NAME}.zip" "${BINARY_NAME}" README.md LICENSE
            echo "ASSET_PATH=${ARCHIVE_NAME}.zip" >> $GITHUB_ENV
          else
            tar -czf "${ARCHIVE_NAME}.tar.gz" "${BINARY_NAME}" README.md LICENSE
            echo "ASSET_PATH=${ARCHIVE_NAME}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ env.ASSET_PATH }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.tag }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Generate checksums
        run: |
          cd artifacts
          find . -name "*.tar.gz" -o -name "*.zip" | while read file; do
            sha256sum "$file" >> ../checksums.txt
          done
          cd ..
          mv checksums.txt artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
            artifacts/checksums.txt
          body: |
            ## Installation

            ### Quick Install (Recommended)
            ```bash
            curl -sSL https://raw.githubusercontent.com/T4cceptor/MakeMCP/main/install.sh | bash
            ```

            ### Download Binary
            Download the appropriate binary for your platform from the assets below.

            ### Using Go
            ```bash
            go install github.com/T4cceptor/MakeMCP@${{ steps.version.outputs.version }}
            ```

            ### Using curl (Linux/macOS)
            ```bash
            curl -L https://github.com/T4cceptor/MakeMCP/releases/download/${{ steps.version.outputs.version }}/makemcp-${{ steps.version.outputs.version }}-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m | sed 's/x86_64/amd64/').tar.gz | tar -xz
            sudo mv makemcp /usr/local/bin/
            ```

            ## Checksums
            See `checksums.txt` for SHA256 hashes of all release artifacts.

            ## Changes
            See the automatically generated release notes below.

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}