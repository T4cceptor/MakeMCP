{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample User API",
    "version": "1.0.0",
    "description": "A sample API for managing users with various parameter types"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "operationId": "listUsers",
        "summary": "List all users",
        "description": "Retrieve a paginated list of users with optional filtering",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of users to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of users to skip",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter users by status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "inactive", "pending"]
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "summary": "Create a new user",
        "description": "Create a new user with the provided information",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's full name"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email address"
                  },
                  "age": {
                    "type": "integer",
                    "description": "User's age",
                    "minimum": 0,
                    "maximum": 120
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the user is active",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "getUserById",
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their unique identifier",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier for the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Additional fields to include in response",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["profile", "preferences", "history"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "summary": "Update user",
        "description": "Update an existing user's information",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier for the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's full name"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email address"
                  },
                  "age": {
                    "type": "integer",
                    "description": "User's age"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the user is active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "Delete user",
        "description": "Delete a user from the system",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier for the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force deletion even if user has dependencies",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/preferences": {
      "get": {
        "summary": "Get user preferences",
        "description": "Retrieve user preferences and settings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier for the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session-id",
            "in": "cookie",
            "description": "Session identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User preferences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "theme": {
                      "type": "string",
                      "enum": ["light", "dark"]
                    },
                    "language": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["id", "name", "email"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "age": {
            "type": "integer",
            "description": "User's age"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the user is active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation timestamp"
          }
        }
      }
    }
  }
}